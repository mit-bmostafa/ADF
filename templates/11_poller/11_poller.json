{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"lksazureblobstorage": {
			"type": "string"
		},
		"lksftpwinserver": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/11_poller')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "poller",
				"activities": [
					{
						"name": "13_get_files_list",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "12_sftp_poller",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "wabs_data_source_folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Location",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "14_filter_files",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "13_get_files_list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('13_get_files_list').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'),startswith(item().name, 'ConversationReport') )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "15_loop_files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "14_filter_files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('14_filter_files').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "15_2_archive_data",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "15_1_copy_data_to_hive",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "wabs_data_source_file",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "wabs_data_destination",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.ArchiveStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@concat(pipeline().parameters.ArchiveStore_Directory,'/', substring(split(split(item().name, '-')[2], '.')[0], 0, 6))",
													"type": "Expression"
												},
												"filename": "@item().name"
											}
										}
									]
								},
								{
									"name": "15_1_copy_data_to_hive",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "wabs_data_source_file",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "wabs_data_destination",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"filename": "@item().name"
											}
										}
									]
								},
								{
									"name": "15_3_delete_in_file",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "15_2_archive_data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "wabs_data_source_file",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": "@item().name"
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "[parameters('lksazureblobstorage')]",
												"type": "LinkedServiceReference"
											},
											"path": "data/dtm_eng/out/log"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					},
					{
						"name": "12_sftp_poller",
						"description": "Retrieve files via SFTP",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "11_clean_hive_tmp_raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/Raw/"
							},
							{
								"name": "Destination",
								"value": "data/dtm_eng/in/100000_95/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@pipeline().parameters.windowStart",
										"type": "Expression"
									},
									"modifiedDatetimeEnd": {
										"value": "@pipeline().parameters.windowEnd",
										"type": "Expression"
									},
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "[parameters('lksazureblobstorage')]",
									"type": "LinkedServiceReference"
								},
								"path": "data/out/logs"
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sftp_source_ds",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "wabs_data_in_ds",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "11_clean_hive_tmp_raw",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "wabs_reg20_dtm_emg_tmp_raw",
								"type": "DatasetReference"
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					}
				],
				"parameters": {
					"SourceStore_Location": {
						"type": "string",
						"defaultValue": "data"
					},
					"SourceStore_Directory": {
						"type": "string",
						"defaultValue": "dtm_eng/in/100000_95"
					},
					"DestinationStore_Location": {
						"type": "string",
						"defaultValue": "hive"
					},
					"DestinationStore_Directory": {
						"type": "string",
						"defaultValue": "warehouse/reg20_dtm_eng_tmp/raw_conversation_tbl"
					},
					"ArchiveStore_Location": {
						"type": "string",
						"defaultValue": "data"
					},
					"ArchiveStore_Directory": {
						"type": "string",
						"defaultValue": "dtm_eng/out/archive/100000_95"
					},
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "01_retriever"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/wabs_data_source_folder')]",
				"[concat(variables('factoryId'), '/datasets/sftp_source_ds')]",
				"[concat(variables('factoryId'), '/datasets/wabs_data_in_ds')]",
				"[concat(variables('factoryId'), '/datasets/wabs_reg20_dtm_emg_tmp_raw')]",
				"[concat(variables('factoryId'), '/datasets/wabs_data_source_file')]",
				"[concat(variables('factoryId'), '/datasets/wabs_data_destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wabs_data_source_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the folder in the data source store.",
				"linkedServiceName": {
					"referenceName": "[parameters('lksazureblobstorage')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					},
					"Directory": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@{dataset().Directory}",
							"type": "Expression"
						},
						"container": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sftp_source_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('lksftpwinserver')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "\n*.csv",
							"type": "Expression"
						},
						"folderPath": "/Raw"
					},
					"columnDelimiter": ";",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Identifiant Utilisateur",
						"type": "String"
					},
					{
						"name": "Date travail Appel",
						"type": "String"
					},
					{
						"name": "Nombre d indisponibilités",
						"type": "String"
					},
					{
						"name": "Temps d indisponibilité",
						"type": "String"
					},
					{
						"name": "Nombre de file d'attente",
						"type": "String"
					},
					{
						"name": "Temps en file d'attente",
						"type": "String"
					},
					{
						"name": "Nombre de communications",
						"type": "String"
					},
					{
						"name": "Temps de communication",
						"type": "String"
					},
					{
						"name": "Nombre de clotures",
						"type": "String"
					},
					{
						"name": "Temps de cloture",
						"type": "String"
					},
					{
						"name": "Nombre d'attentes",
						"type": "String"
					},
					{
						"name": "Temps d'attente",
						"type": "String"
					},
					{
						"name": "Temps de login",
						"type": "String"
					},
					{
						"name": "Nombre de Rotations",
						"type": "String"
					},
					{
						"name": "Temps de conversation entrant",
						"type": "String"
					},
					{
						"name": "Tps de Garde Servis",
						"type": "String"
					},
					{
						"name": "Nombre de Garde Servis",
						"type": "String"
					},
					{
						"name": "Nombre de Idle",
						"type": "String"
					},
					{
						"name": "Temps Idle",
						"type": "String"
					},
					{
						"name": "Nombre de Busy",
						"type": "String"
					},
					{
						"name": "Temps Busy",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wabs_data_in_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('lksazureblobstorage')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "dtm_eng/in/100000_95",
						"container": "data"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wabs_reg20_dtm_emg_tmp_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('lksazureblobstorage')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "warehouse/reg20_dtm_eng_tmp/raw_conversation_tbl",
						"container": "hive"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wabs_data_source_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the file in the data source store.",
				"linkedServiceName": {
					"referenceName": "[parameters('lksazureblobstorage')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					},
					"Directory": {
						"type": "String"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@{dataset().Directory}",
							"type": "Expression"
						},
						"container": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wabs_data_destination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the destination store.",
				"linkedServiceName": {
					"referenceName": "[parameters('lksazureblobstorage')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					},
					"Directory": {
						"type": "String"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@{dataset().Directory}",
							"type": "Expression"
						},
						"container": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		}
	]
}