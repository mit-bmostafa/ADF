{
	"name": "01_retriever",
	"properties": {
		"description": "Move files from one folder to another folder",
		"activities": [
			{
				"name": "Get_data_in_files_list",
				"description": "Get the list of file",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Sftp_poller",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_wabs_data_in_Folder",
						"type": "DatasetReference",
						"parameters": {
							"Container": {
								"value": "@pipeline().parameters.SourceStore_Location",
								"type": "Expression"
							},
							"Directory": {
								"value": "@pipeline().parameters.SourceStore_Directory",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "Loop_data_in_files",
				"description": "Iterate each file, and move them one by one.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter_files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter_files').output.value",
						"type": "Expression"
					},
					"batchCount": 20,
					"activities": [
						{
							"name": "data_to_hive",
							"description": "Copy a file from the source store to the destination store.",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									},
									"recursive": false
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"dataIntegrationUnits": 0
							},
							"inputs": [
								{
									"referenceName": "ds_wabs_data_in_File",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@pipeline().parameters.SourceStore_Location",
											"type": "Expression"
										},
										"Directory": {
											"value": "@pipeline().parameters.SourceStore_Directory",
											"type": "Expression"
										},
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_wabs_warehouse_tmp_raw",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@pipeline().parameters.DestinationStore_Location",
											"type": "Expression"
										},
										"Directory": {
											"value": "@pipeline().parameters.DestinationStore_Directory",
											"type": "Expression"
										},
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Filter_files",
				"description": "Only files will be selected, the source-folders will not be selected.",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get_data_in_files_list",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get_data_in_files_list').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@and(equals(item().type, 'File'),startswith(item().name, 'ConversationReport') )",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Sftp_poller",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "/Raw/"
					},
					{
						"name": "Destination",
						"value": "data/dtm_eng/in/100000_95/"
					}
				],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "SftpReadSettings",
							"recursive": true,
							"modifiedDatetimeStart": {
								"value": "@pipeline().parameters.windowStart",
								"type": "Expression"
							},
							"modifiedDatetimeEnd": {
								"value": "@pipeline().parameters.windowEnd",
								"type": "Expression"
							},
							"wildcardFileName": "*"
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings",
							"skipLineCount": 0
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": true,
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "lksazureblobstorage",
							"type": "LinkedServiceReference"
						},
						"path": "data/out/logs"
					}
				},
				"inputs": [
					{
						"referenceName": "ds_sftp_source",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_wabs_data_in",
						"type": "DatasetReference"
					}
				]
			}
		],
		"parameters": {
			"SourceStore_Location": {
				"type": "string",
				"defaultValue": "data"
			},
			"SourceStore_Directory": {
				"type": "String",
				"defaultValue": "dtm_eng/in/100000_95"
			},
			"DestinationStore_Location": {
				"type": "String",
				"defaultValue": "hive"
			},
			"DestinationStore_Directory": {
				"type": "String",
				"defaultValue": "warehouse/reg20_dtm_eng_tmp/raw_conversation_tbl"
			},
			"windowStart": {
				"type": "string"
			},
			"windowEnd": {
				"type": "string"
			}
		},
		"annotations": []
	}
}