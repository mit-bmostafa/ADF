{
	"name": "11_poller",
	"properties": {
		"description": "poller",
		"activities": [
			{
				"name": "13_get_files_list",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "12_sftp_poller",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "wabs_data_source_folder",
						"type": "DatasetReference",
						"parameters": {
							"Container": {
								"value": "@pipeline().parameters.SourceStore_Location",
								"type": "Expression"
							},
							"Directory": {
								"value": "@pipeline().parameters.SourceStore_Directory",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "14_filter_files",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "13_get_files_list",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('13_get_files_list').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@and(equals(item().type, 'File'),startswith(item().name, 'ConversationReport') )",
						"type": "Expression"
					}
				}
			},
			{
				"name": "15_loop_files",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "14_filter_files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('14_filter_files').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "15_2_archive_data",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "15_1_copy_data_to_hive",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false,
								"dataIntegrationUnits": 0
							},
							"inputs": [
								{
									"referenceName": "wabs_data_source_file",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@pipeline().parameters.SourceStore_Location",
											"type": "Expression"
										},
										"Directory": {
											"value": "@pipeline().parameters.SourceStore_Directory",
											"type": "Expression"
										},
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "wabs_data_destination",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@pipeline().parameters.ArchiveStore_Location",
											"type": "Expression"
										},
										"Directory": {
											"value": "@concat(pipeline().parameters.ArchiveStore_Directory,'/', substring(split(split(item().name, '-')[2], '.')[0], 0, 6))",
											"type": "Expression"
										},
										"filename": "@item().name"
									}
								}
							]
						},
						{
							"name": "15_1_copy_data_to_hive",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "file_type_2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false,
								"dataIntegrationUnits": 0
							},
							"inputs": [
								{
									"referenceName": "wabs_data_source_file",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@pipeline().parameters.SourceStore_Location",
											"type": "Expression"
										},
										"Directory": {
											"value": "@pipeline().parameters.SourceStore_Directory",
											"type": "Expression"
										},
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "wabs_data_destination",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@pipeline().parameters.DestinationStore_Location",
											"type": "Expression"
										},
										"Directory": {
											"value": "@concat(pipeline().parameters.DestinationStore_Directory, variables('file_type'))",
											"type": "Expression"
										},
										"filename": "@item().name"
									}
								}
							]
						},
						{
							"name": "15_3_delete_in_file",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "15_2_archive_data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "wabs_data_source_file",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@pipeline().parameters.SourceStore_Location",
											"type": "Expression"
										},
										"Directory": {
											"value": "@pipeline().parameters.SourceStore_Directory",
											"type": "Expression"
										},
										"filename": "@item().name"
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "lksazureblobstorage",
										"type": "LinkedServiceReference"
									},
									"path": "data/dtm_eng/out/log"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							}
						},
						{
							"name": "file_type_1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@contains(item().name, 'AgentReport')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "set_file_type",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "file_type",
											"value": "'raw_conversation_tbl'"
										}
									}
								]
							}
						},
						{
							"name": "file_type_2",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "file_type_1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@contains(item().name, 'ConversationReport')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "set_file_type_2",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "file_type",
											"value": "'raw_agent_tbl'"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "12_sftp_poller",
				"description": "Retrieve files via SFTP",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "11_clean_hive_tmp_raw",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "/Raw/"
					},
					{
						"name": "Destination",
						"value": "data/dtm_eng/in/100000_95/"
					}
				],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "SftpReadSettings",
							"recursive": true,
							"modifiedDatetimeStart": {
								"value": "@pipeline().parameters.windowStart",
								"type": "Expression"
							},
							"modifiedDatetimeEnd": {
								"value": "@pipeline().parameters.windowEnd",
								"type": "Expression"
							},
							"wildcardFileName": "*"
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings",
							"skipLineCount": 0
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": true,
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "lksazureblobstorage",
							"type": "LinkedServiceReference"
						},
						"path": "data/out/logs"
					},
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "sftp_source_ds",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "wabs_data_in_ds",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "11_clean_hive_tmp_raw",
				"type": "Delete",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "wabs_reg20_dtm_emg_tmp_raw",
						"type": "DatasetReference"
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"prefix": "raw_*"
					}
				}
			}
		],
		"parameters": {
			"SourceStore_Location": {
				"type": "string",
				"defaultValue": "data"
			},
			"SourceStore_Directory": {
				"type": "string",
				"defaultValue": "dtm_eng/in/100000_95"
			},
			"DestinationStore_Location": {
				"type": "string",
				"defaultValue": "hive"
			},
			"DestinationStore_Directory": {
				"type": "string",
				"defaultValue": "warehouse/reg20_dtm_eng_tmp/"
			},
			"ArchiveStore_Location": {
				"type": "string",
				"defaultValue": "data"
			},
			"ArchiveStore_Directory": {
				"type": "string",
				"defaultValue": "dtm_eng/out/archive/100000_95"
			},
			"windowStart": {
				"type": "string",
				"defaultValue": "2020-07-01"
			},
			"windowEnd": {
				"type": "string",
				"defaultValue": "2020-10-01"
			}
		},
		"variables": {
			"file_type": {
				"type": "String",
				"defaultValue": "raw_performance_tbl"
			}
		},
		"folder": {
			"name": "01_retriever"
		},
		"annotations": []
	}
}